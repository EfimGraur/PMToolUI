[{"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/index.js":"1","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/App.js":"2","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/Expenses.js":"3","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/ExpenseItem.js":"4","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/UI/Card.js":"5","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/ExpenseDate.js":"6","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/NewExpense/NewExpense.js":"7","/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/NewExpense/ExpenseForm.js":"8","/Users/egraur/Downloads/01-starting-project/src/index.js":"9","/Users/egraur/Downloads/01-starting-project/src/App.js":"10","/Users/egraur/Downloads/01-starting-project/src/pages/AuthPage.js":"11","/Users/egraur/Downloads/01-starting-project/src/pages/HomePage.js":"12","/Users/egraur/Downloads/01-starting-project/src/components/Layout/Layout.js":"13","/Users/egraur/Downloads/01-starting-project/src/components/Layout/MainNavigation.js":"14","/Users/egraur/Downloads/01-starting-project/src/components/Auth/AuthForm.js":"15","/Users/egraur/Downloads/01-starting-project/src/store/auth-context.js":"16","/Users/egraur/Downloads/01-starting-project/src/http/axios.js":"17","/Users/egraur/Downloads/01-starting-project/src/components/Table/GenericTable.js":"18","/Users/egraur/Downloads/01-starting-project/src/components/User/UserTable.js":"19","/Users/egraur/Downloads/01-starting-project/src/components/Project/ProjectTable.js":"20","/Users/egraur/Downloads/01-starting-project/src/components/Task/TaskTable.js":"21","/Users/egraur/Downloads/01-starting-project/src/components/Card/SimpleCard.js":"22","/Users/egraur/Downloads/01-starting-project/src/components/ButtonGroup/BasicButtonGroup.js":"23","/Users/egraur/Downloads/01-starting-project/src/components/Dialog/DeleteDialog.js":"24","/Users/egraur/Downloads/01-starting-project/src/components/Dialog/DropDown/DropDown.js":"25","/Users/egraur/Downloads/01-starting-project/src/utils.js":"26","/Users/egraur/Downloads/01-starting-project/src/components/Dialog/InfoDialog.js":"27","/Users/egraur/Downloads/01-starting-project/src/constants/resourceConstants.js":"28","/Users/egraur/Downloads/01-starting-project/src/constants/roleConstants.js":"29","/Users/egraur/Downloads/01-starting-project/src/constants/domainConstants.js":"30","/Users/egraur/Downloads/01-starting-project/src/components/Project/CreateProjectDialog.js":"31","/Users/egraur/Downloads/01-starting-project/src/components/User/CreateUsersDialog.js":"32","/Users/egraur/Downloads/01-starting-project/src/components/Project/EditProjectDialog.js":"33","/Users/egraur/Downloads/01-starting-project/src/components/User/EditUsersDialog.js":"34","/Users/egraur/Downloads/01-starting-project/src/components/Task/CreateTaskDialog.js":"35","/Users/egraur/Downloads/01-starting-project/src/components/Task/EditTaskDialog.js":"36","/Users/egraur/Downloads/01-starting-project/src/pages/StartingPageContent.js":"37"},{"size":169,"mtime":1618354401000,"results":"38","hashOfConfig":"39"},{"size":1104,"mtime":1627891191386,"results":"40","hashOfConfig":"39"},{"size":858,"mtime":1627840006242,"results":"41","hashOfConfig":"39"},{"size":780,"mtime":1627841183039,"results":"42","hashOfConfig":"39"},{"size":205,"mtime":1618354401000,"results":"43","hashOfConfig":"39"},{"size":532,"mtime":1618354401000,"results":"44","hashOfConfig":"39"},{"size":476,"mtime":1627891212944,"results":"45","hashOfConfig":"39"},{"size":2842,"mtime":1627890599247,"results":"46","hashOfConfig":"39"},{"size":351,"mtime":1628456342786,"results":"47","hashOfConfig":"48"},{"size":1259,"mtime":1628462778863,"results":"49","hashOfConfig":"48"},{"size":130,"mtime":1628456301769,"results":"50","hashOfConfig":"48"},{"size":146,"mtime":1628460156226,"results":"51","hashOfConfig":"48"},{"size":330,"mtime":1628456166744,"results":"52","hashOfConfig":"48"},{"size":1478,"mtime":1628462698875,"results":"53","hashOfConfig":"48"},{"size":2013,"mtime":1628462891456,"results":"54","hashOfConfig":"48"},{"size":1564,"mtime":1628456323186,"results":"55","hashOfConfig":"48"},{"size":162,"mtime":1628456295517,"results":"56","hashOfConfig":"48"},{"size":6644,"mtime":1628459237327,"results":"57","hashOfConfig":"48"},{"size":1494,"mtime":1628456283057,"results":"58","hashOfConfig":"48"},{"size":1711,"mtime":1628456186820,"results":"59","hashOfConfig":"48"},{"size":2023,"mtime":1628456273686,"results":"60","hashOfConfig":"48"},{"size":714,"mtime":1628456119606,"results":"61","hashOfConfig":"48"},{"size":913,"mtime":1628110059217,"results":"62","hashOfConfig":"48"},{"size":2573,"mtime":1628462885544,"results":"63","hashOfConfig":"48"},{"size":1679,"mtime":1628456139016,"results":"64","hashOfConfig":"48"},{"size":527,"mtime":1628456348967,"results":"65","hashOfConfig":"48"},{"size":1035,"mtime":1628456160596,"results":"66","hashOfConfig":"48"},{"size":163,"mtime":1628461469352,"results":"67","hashOfConfig":"48"},{"size":95,"mtime":1628257840669,"results":"68","hashOfConfig":"48"},{"size":116,"mtime":1628275583726,"results":"69","hashOfConfig":"48"},{"size":5085,"mtime":1628457589279,"results":"70","hashOfConfig":"48"},{"size":5639,"mtime":1628456691818,"results":"71","hashOfConfig":"48"},{"size":5659,"mtime":1628458911993,"results":"72","hashOfConfig":"48"},{"size":6023,"mtime":1628457332366,"results":"73","hashOfConfig":"48"},{"size":6450,"mtime":1628462898164,"results":"74","hashOfConfig":"48"},{"size":7282,"mtime":1628462901013,"results":"75","hashOfConfig":"48"},{"size":260,"mtime":1628456192926,"results":"76","hashOfConfig":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1d20vd8",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1hatf2y",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/index.js",[],["164","165"],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/App.js",[],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/Expenses.js",[],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/ExpenseItem.js",[],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/UI/Card.js",[],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/Expenses/ExpenseDate.js",[],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/NewExpense/NewExpense.js",["166"],"/Users/egraur/Downloads/react-complete-guide-code-03-react-basics-working-with-components/code/11-finished/src/components/NewExpense/ExpenseForm.js",[],"/Users/egraur/Downloads/01-starting-project/src/index.js",[],["167","168"],"/Users/egraur/Downloads/01-starting-project/src/App.js",[],"/Users/egraur/Downloads/01-starting-project/src/pages/AuthPage.js",[],"/Users/egraur/Downloads/01-starting-project/src/pages/HomePage.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Layout/Layout.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Layout/MainNavigation.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Auth/AuthForm.js",[],"/Users/egraur/Downloads/01-starting-project/src/store/auth-context.js",[],"/Users/egraur/Downloads/01-starting-project/src/http/axios.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Table/GenericTable.js",["169","170","171"],"import { ButtonGroup } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useContext } from \"react\";\nimport {\n  PROJECTS_DOMAIN,\n  TASKS_DOMAIN,\n  USERS_DOMAIN\n} from \"../../constants/domainConstants\";\nimport { ADMIN_ROLE, DEV_ROLE } from \"../../constants/roleConstants\";\nimport AuthContext from \"../../store/auth-context\";\nimport CreateTaskDialog from \"../Task/CreateTaskDialog\";\nimport CreateUserDialog from \"../User/CreateUsersDialog\";\nimport CreateProjectDialog from \"../Project/CreateProjectDialog\";\nimport DeleteDialog from \"../Dialog/DeleteDialog\";\nimport EditUserDialog from \"../User/EditUsersDialog\";\nimport EditProjectDialog from \"../Project/EditProjectDialog\";\nimport EditTaskDialog from \"../Task/EditTaskDialog\";\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n  container: {\n    position: \"relative\",\n    alignItems: \"left\",\n  },\n  button: {\n    textSizeAdjust: \"50\",\n    backgroundColor: \"#3f51b5\",\n    margin: \"left\",\n  },\n});\n\nexport default function GenericTable(props) {\n  const authCtx = useContext(AuthContext);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const showUserDialogs = props.domain === USERS_DOMAIN;\n\n  const showProjectsDialog =\n    props.domain === PROJECTS_DOMAIN && authCtx.userRole === ADMIN_ROLE;\n\n  const showCreateTaskDialog =\n    props.domain === TASKS_DOMAIN && authCtx.userRole !== DEV_ROLE;\n\n  const showDeleteDialog =\n    props.domain !== TASKS_DOMAIN || authCtx.userRole !== DEV_ROLE;\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" colSpan=\"10\">\n                {/* <Button className={classes.button}><AddIcon/></Button> */}\n                {showUserDialogs && (\n                  <CreateUserDialog fetchElements={props.fetchElements} />\n                )}\n                {showProjectsDialog && (\n                  <CreateProjectDialog fetchElements={props.fetchElements} />\n                )}\n                {showCreateTaskDialog && (\n                  <CreateTaskDialog\n                    fetchElements={props.fetchElements}\n                    rows={props.rows}\n                  />\n                )}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {props.columns.map((column, index) => {\n                      const value = row[column.id];\n                      if (index === props.columns.length - 2) {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {/* <BasicButtonGroup className={classes.buttonGroup}/> */}\n                            <ButtonGroup>\n                              {showDeleteDialog && (\n                                <DeleteDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                />\n                              )}\n                              {props.domain === USERS_DOMAIN && (\n                                <EditUserDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                              {props.domain === PROJECTS_DOMAIN && (\n                                <EditProjectDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                              {props.domain === TASKS_DOMAIN && (\n                                <EditTaskDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                            </ButtonGroup>\n                          </TableCell>\n                        );\n                      } else {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      }\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={props.rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      /> */}\n    </Paper>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/User/UserTable.js",["172","173"],"import { useContext, useEffect, useState } from \"react\";\nimport { USERS_DOMAIN } from \"../../constants/domainConstants\";\nimport { USERS_URL } from \"../../constants/resourceConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport GenericTable from \"../Table/GenericTable\";\nimport classes from \"./User.module.css\";\n\nconst columns = [\n  { id: \"id\", label: \"User ID\", minWidth: 170 },\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n  { id: \"firstName\", label: \"First Name\", minWidth: 100 },\n  { id: \"lastName\", label: \"Last Name\", minWidth: 100 },\n  { id: \"username\", label: \"Username\", minWidth: 100 },\n  { id: \"role\", label: \"role\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100, align: \"center\" },\n  ,\n];\n\nconst UserTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Users</h1>\n      <GenericTable\n        columns={columns}\n        rows={users}\n        domain={USERS_DOMAIN}\n        fetchElements={fetchUsers}\n      />\n    </section>\n  );\n};\n\nexport default UserTable;\n","/Users/egraur/Downloads/01-starting-project/src/components/Project/ProjectTable.js",["174","175"],"import { useContext, useEffect, useState } from \"react\";\nimport { PROJECTS_DOMAIN } from \"../../constants/domainConstants\";\nimport { USERS_URL } from \"../../constants/resourceConstants\";\nimport { ADMIN_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport GenericTable from \"../Table/GenericTable\";\nimport classes from \"./Project.module.css\";\n\nconst columns = [\n  { id: \"id\", label: \"Project ID\", minWidth: 170 },\n  { id: \"code\", label: \"Code\", minWidth: 100 },\n  { id: \"name\", label: \"Name\", minWidth: 100 },\n  { id: \"assignee\", label: \"Asignee\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n  ,\n];\n\nconst ProjectTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const userId = authCtx.userId;\n  let projectsURL;\n  if (authCtx.userRole === ADMIN_ROLE) {\n    projectsURL = \"/api/v1/projects\";\n  } else if (authCtx.userRole === PM_ROLE) {\n    projectsURL = USERS_URL + \"/\" + userId + \"/projects\";\n  }\n\n  const fetchProjects = () => {\n    const promise = axios.get(projectsURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setProjects(res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Projects</h1>\n      <GenericTable\n        columns={columns}\n        rows={projects}\n        domain={PROJECTS_DOMAIN}\n        fetchElements={fetchProjects}\n      />\n    </section>\n  );\n};\n\nexport default ProjectTable;\n","/Users/egraur/Downloads/01-starting-project/src/components/Task/TaskTable.js",["176","177"],"import { useContext, useEffect, useState } from \"react\";\nimport { TASKS_DOMAIN } from \"../../constants/domainConstants\";\nimport { TASKS_URL, USERS_URL } from \"../../constants/resourceConstants\";\nimport { ADMIN_ROLE, DEV_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport GenericTable from \"../Table/GenericTable\";\nimport classes from \"./Task.module.css\";\n\nconst columns = [\n  { id: \"id\", label: \"User ID\", minWidth: 170 },\n  { id: \"description\", label: \"Description\", minWidth: 100 },\n  { id: \"pm\", label: \"Project Manager\", minWidth: 100 },\n  { id: \"progress\", label: \"Progress\", minWidth: 100 },\n  { id: \"status\", label: \"Status\", minWidth: 100 },\n  { id: \"deadline\", label: \"Deadline\", minWidth: 100 },\n  { id: \"projectCode\", label: \"Project Code\", minWidth: 100 },\n  { id: \"assignee\", label: \"Assignee\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n  ,\n];\n\nconst TaskTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const userId = authCtx.userId;\n  let tasksURL;\n  if (authCtx.userRole === ADMIN_ROLE) {\n    tasksURL = TASKS_URL;\n  } else if (authCtx.userRole === PM_ROLE) {\n    tasksURL = USERS_URL + \"/\" + userId + \"/projects/tasks\";\n  } else if (authCtx.userRole === DEV_ROLE) {\n    tasksURL = USERS_URL + \"/\" + userId + \"/tasks\";\n  }\n  const fetchTasks = () => {\n    const promise = axios.get(tasksURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Tasks</h1>\n      <GenericTable\n        columns={columns}\n        rows={tasks}\n        domain={TASKS_DOMAIN}\n        fetchElements={fetchTasks}\n      />\n    </section>\n  );\n};\n\nexport default TaskTable;\n","/Users/egraur/Downloads/01-starting-project/src/components/Card/SimpleCard.js",["178"],"import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  action: {\n    position: \"relative\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>{props.children}</CardContent>\n    </Card>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/ButtonGroup/BasicButtonGroup.js",[],["179","180"],"/Users/egraur/Downloads/01-starting-project/src/components/Dialog/DeleteDialog.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Dialog/DropDown/DropDown.js",[],"/Users/egraur/Downloads/01-starting-project/src/utils.js",["181","182","183","184","185","186","187","188","189","190","191","192"],"import { ADMIN_ROLE, DEV_ROLE, PM_ROLE } from \"./constants/roleConstants\";\n\nexport function isValidField(value) {\n  return /^\\s*[a-zA-Z][a-zA-Z0-9\\-.\\s]*$/.test(value);\n}\n\nexport function isValidEmailField(value) {\n  return /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\n    value\n  );\n}\n\nexport function getRoles() {\n  return [PM_ROLE, ADMIN_ROLE, DEV_ROLE];\n}\n\nexport function getTaskStatuses() {\n  return [\"NEW\", \"IN_PROGRESS\", \"COMPLETED\"];\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/Dialog/InfoDialog.js",[],"/Users/egraur/Downloads/01-starting-project/src/constants/resourceConstants.js",[],"/Users/egraur/Downloads/01-starting-project/src/constants/roleConstants.js",[],"/Users/egraur/Downloads/01-starting-project/src/constants/domainConstants.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Project/CreateProjectDialog.js",["193","194"],"import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { USERS_URL } from \"../../constants/resourceConstants\";\nimport { PM_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { isValidField } from \"../../utils\";\nimport DropDown from \"../Dialog/DropDown/DropDown\";\nimport InfoDialog from \"../Dialog/InfoDialog\";\n\nexport default function CreateProjectDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [code, setCode] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [PMs, setPMs] = useState([]);\n\n  const [enteredAssignee, setEnteredAssignee] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidCode, setIsValidCode] = useState(code.length > 2);\n  const [isValidName, setIsValidName] = useState(isValidField(name));\n\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    enteredAssignee.length >= 1\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    createProject();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredAssignee(\"\");\n    setCode(\"\");\n    setIsValidCode(false);\n    setIsValidName(false);\n  };\n\n  const onChangeCode = (e) => {\n    setCode(e.target.value);\n    setIsValidCode(e.target.value.length > 2);\n  };\n  const onChangeName = (e) => {\n    setName(e.target.value);\n    setIsValidName(isValidField(e.target.value));\n  };\n\n  const createProject = () => {\n    const promise = axios.post(\n      \"/api/v1/projects\",\n      {\n        code: code,\n        name: name,\n        assignee: enteredAssignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Project created successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n        setOpen(false);\n      });\n  };\n\n  const fetchPMs = () => {\n    const promise = axios.get(USERS_URL + \"?role=PM\", {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedPMs = new Array();\n        res.data.map((user) => fetchedPMs.push(user.username));\n        setPMs(fetchedPMs);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchPMs();\n  }, []);\n\n  const showDialogContent = PMs.length > 1;\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Project</DialogTitle>\n        {showDialogContent ? (\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"code\"\n              label=\"Project Code\"\n              type=\"text\"\n              onChange={onChangeCode}\n              fullWidth\n            />\n            {!isValidCode && (\n              <p style={errorTest}> project code must be valid</p>\n            )}\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Project Name\"\n              type=\"text\"\n              onChange={onChangeName}\n              fullWidth\n            />\n            {!isValidName && (\n              <p style={errorTest}> project name must be valid</p>\n            )}\n\n            <DropDown\n              role={PM_ROLE}\n              list={PMs}\n              field={enteredAssignee} //TODO: array?\n              setField={setEnteredAssignee}\n              setIsValid={setIsValidAssignee}\n            />\n          </DialogContent>\n        ) : (\n          <InfoDialog\n            handleClose={handleClose}\n            title=\"Project creation not possible\"\n            message=\"No Project Managers are available\"\n          />\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidCode || !isValidName || !isValidAssignee}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/User/CreateUsersDialog.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Project/EditProjectDialog.js",["195","196"],"import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PROJECTS_URL, USERS_URL } from \"../../constants/resourceConstants\";\nimport { ADMIN_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { isValidField } from \"../../utils\";\nimport DropDown from \"../Dialog/DropDown/DropDown\";\nimport InfoDialog from \"../Dialog/InfoDialog\";\n\nexport default function EditProjectDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [code, setCode] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [PMs, setPMs] = useState([]);\n\n  const [enteredAssignee, setEnteredAssignee] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidCode, setIsValidCode] = useState(code.length > 2);\n  const [isValidName, setIsValidName] = useState(isValidField(name));\n\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    isValidField(enteredAssignee)\n  );\n\n  const handleClickOpen = () => {\n    const currentElement = props.rows.filter(\n      (element) => element.id === props.elementId\n    )[0];\n\n    setCode(currentElement.code);\n    setName(currentElement.name);\n    setEnteredAssignee(currentElement.assignee);\n    setIsValidCode(currentElement.code.length > 1);\n    setIsValidName(isValidField(currentElement.name));\n    setIsValidAssignee(true);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    updateProject();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredAssignee(\"\");\n    setCode(\"\");\n    setIsValidCode(false);\n    setIsValidName(false);\n  };\n\n  const onChangeCode = (e) => {\n    setCode(e.target.value);\n    setIsValidCode(e.target.value.length > 2);\n  };\n  const onChangeName = (e) => {\n    setName(e.target.value);\n    setIsValidName(isValidField(e.target.value));\n  };\n\n  const updateProject = () => {\n    const promise = axios.put(\n      PROJECTS_URL + \"/\" + props.elementId,\n      {\n        id: props.elementId,\n        code: code,\n        name: name,\n        assignee: enteredAssignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Project updated successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  const fetchPMs = () => {\n    const promise = axios.get(USERS_URL + \"?role=PM\", {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedPMs = new Array();\n        res.data.map((user) => fetchedPMs.push(user.username));\n        setPMs(fetchedPMs);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchPMs();\n  }, []);\n\n  const showDialogContent = PMs.length > 1;\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <EditIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Update Project</DialogTitle>\n        {showDialogContent ? (\n          <DialogContent>\n            <TextField\n              defaultValue={code}\n              autoFocus\n              margin=\"dense\"\n              id=\"code\"\n              label=\"Project Code\"\n              type=\"text\"\n              onChange={onChangeCode}\n              fullWidth\n            />\n            {!isValidCode && (\n              <p style={errorTest}> project code must be valid</p>\n            )}\n            <TextField\n              defaultValue={name}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Project Name\"\n              type=\"text\"\n              onChange={onChangeName}\n              fullWidth\n            />\n            {!isValidName && (\n              <p style={errorTest}> project name must be valid</p>\n            )}\n\n            {authCtx.userRole === ADMIN_ROLE && (\n              <DropDown\n                role={PM_ROLE}\n                list={PMs}\n                field={enteredAssignee}\n                setField={setEnteredAssignee}\n                setIsValid={setIsValidAssignee}\n              />\n            )}\n          </DialogContent>\n        ) : (\n          <InfoDialog\n            handleClose={handleClose}\n            title=\"Project creation not possible\"\n            message=\"No Project Managers are available\"\n          />\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidCode || !isValidName || !isValidAssignee}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/User/EditUsersDialog.js",[],"/Users/egraur/Downloads/01-starting-project/src/components/Task/CreateTaskDialog.js",["197","198","199","200","201"],"import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  PROJECTS_URL,\n  TASKS_URL,\n  USERS_URL\n} from \"../../constants/resourceConstants\";\nimport { ADMIN_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { getTaskStatuses, isValidField } from \"../../utils\";\nimport DropDown from \"../Dialog/DropDown/DropDown\";\n\nexport default function CreateTaskDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [description, setDescription] = useState(\"\");\n  const [progress, setProgress] = useState(\"\");\n\n  // dropdown\n  const [status, setStatus] = React.useState([]);\n  const [projectCodes, setProjectCodes] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const [enteredProjectCode, setEnteredProjectCode] = React.useState(\"\");\n  const [assignee, setAssignee] = React.useState(\"\");\n\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidDescription, setIsValidDescription] = useState(\n    isValidField(description)\n  );\n  const [isValidProgress, setIsValidProgress] = useState(progress.length > 1);\n\n  const [isValidStatus, setIsValidStatus] = useState(status.length >= 1);\n  const [isValidEnteredProjectCode, setIsValidEnteredProjectCode] = useState(\n    enteredProjectCode.length >= 1\n  );\n  const [isValidAssignee, setIsValidAssignee] = useState(assignee.length >= 1);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    createTask();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setIsValidDescription(false);\n    setIsValidProgress(false);\n    setStatus(\"\");\n    setAssignee(\"\");\n    setEnteredProjectCode(\"\");\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n    setIsValidDescription(isValidField(e.target.value));\n  };\n  const onChangeProgress = (e) => {\n    setProgress(e.target.value);\n    setIsValidProgress(e.target.value.length > 1);\n  };\n\n  const createTask = () => {\n    const promise = axios.post(\n      TASKS_URL,\n      {\n        description: description,\n        progress: progress,\n        status: status,\n        projectCode: enteredProjectCode,\n        assignee: assignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Task created successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n        setOpen(false);\n      });\n  };\n\n  const fetchProjects = () => {\n    let fetchURL;\n    if (authCtx.userRole === PM_ROLE) {\n      fetchURL = USERS_URL + \"/\" + authCtx.userId + \"/projects\";\n    } else if (authCtx.userRole === ADMIN_ROLE) {\n      fetchURL = PROJECTS_URL;\n    }\n\n    const promise = axios.get(fetchURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedProjectCodes = new Array();\n\n        res.data.map((project) => fetchedProjectCodes.push(project.code));\n        setProjectCodes(fetchedProjectCodes);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedUsers = new Array();\n        res.data.map((user) => fetchedUsers.push(user.username));\n        setUsers(fetchedUsers);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchProjects();\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            onChange={onChangeDescription}\n            fullWidth\n          />\n          {!isValidDescription && (\n            <p style={errorTest}> description must be valid</p>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"progress\"\n            label=\"Progress\"\n            type=\"text\"\n            onChange={onChangeProgress}\n            fullWidth\n          />\n          {!isValidProgress && (\n            <p style={errorTest}> progress name must be valid</p>\n          )}\n\n          <DropDown\n            role=\"Status\"\n            list={getTaskStatuses()}\n            field={status}\n            setField={setStatus}\n            setIsValid={setIsValidStatus}\n          />\n          <DropDown\n            role=\"Code\"\n            list={projectCodes}\n            field={enteredProjectCode}\n            setField={setEnteredProjectCode}\n            setIsValid={setIsValidEnteredProjectCode}\n          />\n          <DropDown\n            role=\"Assignee\"\n            list={users}\n            field={assignee}\n            setField={setAssignee}\n            setIsValid={setIsValidAssignee}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidDescription || !isValidProgress || !isValidStatus}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/components/Task/EditTaskDialog.js",["202","203","204","205","206"],"import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  PROJECTS_URL,\n  TASKS_URL,\n  USERS_URL\n} from \"../../constants/resourceConstants\";\nimport { DEV_ROLE } from \"../../constants/roleConstants\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { getTaskStatuses, isValidField } from \"../../utils\";\nimport DropDown from \"../Dialog/DropDown/DropDown\";\n\nexport default function EditTaskDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  useEffect(() => {\n    if (authCtx.userRole !== DEV_ROLE) {\n      fetchProjects();\n      fetchUsers();\n    }\n  }, []);\n\n  const authCtx = useContext(AuthContext);\n\n  const [description, setDescription] = useState(\"\");\n  const [progress, setProgress] = useState(\"\");\n\n  // dropdown\n  const [status, setStatus] = React.useState(\"\");\n  const [projectCodes, setProjectCodes] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const [enteredProjectCode, setEnteredProjectCode] = React.useState(\"\");\n  const [assignee, setAssignee] = React.useState(\"\");\n\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidDescription, setIsValidDescription] = useState(\n    isValidField(description)\n  );\n  const [isValidProgress, setIsValidProgress] = useState(!isNaN(progress));\n\n  const [isValidStatus, setIsValidStatus] = useState(status.length >= 1);\n  const [isValidEnteredProjectCode, setIsValidEnteredProjectCode] = useState(\n    isValidField(enteredProjectCode)\n  );\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    isValidField(assignee)\n  );\n\n  const handleClickOpen = () => {\n    const currentElement = props.rows.filter(\n      (element) => element.id === props.elementId\n    )[0];\n    setDescription(currentElement.description);\n    setProgress(currentElement.progress);\n    setStatus(currentElement.status);\n    setEnteredProjectCode(currentElement.projectCode);\n    setAssignee(currentElement.assignee);\n\n    setIsValidDescription(isValidField(currentElement.description));\n    setIsValidStatus(currentElement.status.length > 1);\n    setIsValidAssignee(true);\n    setIsValidEnteredProjectCode(true);\n    setIsValidProgress(!isNaN(progress));\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    updateTask();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setIsValidDescription(false);\n    setIsValidProgress(false);\n    setStatus(\"\");\n    setAssignee(\"\");\n    setEnteredProjectCode(\"\");\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n    setIsValidDescription(isValidField(e.target.value));\n  };\n  const onChangeProgress = (e) => {\n    setProgress(e.target.value);\n    setIsValidProgress(!isNaN(e.target.value));\n    console.log(!isNaN(e.target.value));\n  };\n\n  const updateTask = () => {\n    const promise = axios.put(\n      TASKS_URL + \"/\" + props.elementId,\n      {\n        description: description,\n        progress: progress,\n        status: status,\n        projectCode: enteredProjectCode,\n        assignee: assignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then(() => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Task updated successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  const fetchProjects = () => {\n    const promise = axios.get(PROJECTS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedProjectCodes = new Array();\n        res.data.map((project) => fetchedProjectCodes.push(project.code));\n        setProjectCodes(fetchedProjectCodes);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n      });\n  };\n\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedUsers = new Array();\n        res.data.map((user) => fetchedUsers.push(user.username));\n        setUsers(fetchedUsers);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  // const showProjectCodeDropdown = props.domain !== PROJECTS_DOMAIN;\n  const showProjectCodeDropdown = authCtx.userRole !== DEV_ROLE;\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <EditIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Update Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue={description}\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            onChange={onChangeDescription}\n            fullWidth\n          />\n          {!isValidDescription && (\n            <p style={errorTest}> description must be valid</p>\n          )}\n          <TextField\n            defaultValue={progress}\n            autoFocus\n            margin=\"dense\"\n            id=\"progress\"\n            label=\"Progress\"\n            type=\"text\"\n            onChange={onChangeProgress}\n            fullWidth\n          />\n          {!isValidProgress && (\n            <p style={errorTest}> progress name must be valid</p>\n          )}\n\n          <DropDown\n            role=\"Status\"\n            list={getTaskStatuses()}\n            field={status}\n            setField={setStatus}\n            setIsValid={setIsValidStatus}\n          />\n          {showProjectCodeDropdown && (\n            <DropDown\n              role=\"Code\"\n              list={projectCodes}\n              field={enteredProjectCode}\n              setField={setEnteredProjectCode}\n              setIsValid={setIsValidEnteredProjectCode}\n            />\n          )}\n          {authCtx.userRole !== DEV_ROLE && (\n            <DropDown\n              role=\"Assignee\"\n              list={users}\n              field={assignee}\n              setField={setAssignee}\n              setIsValid={setIsValidAssignee}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidDescription || !isValidProgress || !isValidStatus}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/egraur/Downloads/01-starting-project/src/pages/StartingPageContent.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":8,"column":16,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17,"fix":"215"},{"ruleId":"207","replacedBy":"216"},{"ruleId":"209","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":35,"column":3,"nodeType":"220","messageId":"221","endLine":35,"endColumn":12},{"ruleId":"222","severity":1,"message":"223","line":51,"column":9,"nodeType":"224","messageId":"225","endLine":51,"endColumn":25},{"ruleId":"222","severity":1,"message":"226","line":55,"column":9,"nodeType":"224","messageId":"225","endLine":55,"endColumn":32},{"ruleId":"227","severity":1,"message":"228","line":9,"column":17,"nodeType":"229","messageId":"230","endLine":18,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":25,"column":6,"nodeType":"229","endLine":25,"endColumn":8,"suggestions":"233"},{"ruleId":"227","severity":1,"message":"228","line":10,"column":17,"nodeType":"229","messageId":"230","endLine":17,"endColumn":2},{"ruleId":"231","severity":1,"message":"234","line":24,"column":6,"nodeType":"229","endLine":24,"endColumn":8,"suggestions":"235"},{"ruleId":"227","severity":1,"message":"228","line":10,"column":17,"nodeType":"229","messageId":"230","endLine":21,"endColumn":2},{"ruleId":"231","severity":1,"message":"236","line":28,"column":6,"nodeType":"229","endLine":28,"endColumn":8,"suggestions":"237"},{"ruleId":"222","severity":1,"message":"238","line":28,"column":9,"nodeType":"224","messageId":"225","endLine":28,"endColumn":13},{"ruleId":"207","replacedBy":"239"},{"ruleId":"209","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":8,"column":20,"nodeType":"243","messageId":"244","endLine":8,"endColumn":21,"suggestions":"245"},{"ruleId":"241","severity":1,"message":"246","line":8,"column":24,"nodeType":"243","messageId":"244","endLine":8,"endColumn":25,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":32,"nodeType":"243","messageId":"244","endLine":8,"endColumn":33,"suggestions":"249"},{"ruleId":"241","severity":1,"message":"242","line":8,"column":45,"nodeType":"243","messageId":"244","endLine":8,"endColumn":46,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"246","line":8,"column":49,"nodeType":"243","messageId":"244","endLine":8,"endColumn":50,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":57,"nodeType":"243","messageId":"244","endLine":8,"endColumn":58,"suggestions":"252"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":66,"nodeType":"243","messageId":"244","endLine":8,"endColumn":67,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":70,"nodeType":"243","messageId":"244","endLine":8,"endColumn":71,"suggestions":"254"},{"ruleId":"241","severity":1,"message":"246","line":8,"column":86,"nodeType":"243","messageId":"244","endLine":8,"endColumn":87,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":94,"nodeType":"243","messageId":"244","endLine":8,"endColumn":95,"suggestions":"256"},{"ruleId":"241","severity":1,"message":"246","line":8,"column":111,"nodeType":"243","messageId":"244","endLine":8,"endColumn":112,"suggestions":"257"},{"ruleId":"241","severity":1,"message":"248","line":8,"column":119,"nodeType":"243","messageId":"244","endLine":8,"endColumn":120,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":108,"column":26,"nodeType":"261","messageId":"262","endLine":108,"endColumn":37},{"ruleId":"231","severity":1,"message":"263","line":120,"column":6,"nodeType":"229","endLine":120,"endColumn":8,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"260","line":119,"column":26,"nodeType":"261","messageId":"262","endLine":119,"endColumn":37},{"ruleId":"231","severity":1,"message":"263","line":131,"column":6,"nodeType":"229","endLine":131,"endColumn":8,"suggestions":"265"},{"ruleId":"222","severity":1,"message":"266","line":47,"column":10,"nodeType":"224","messageId":"225","endLine":47,"endColumn":35},{"ruleId":"222","severity":1,"message":"267","line":50,"column":10,"nodeType":"224","messageId":"225","endLine":50,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":130,"column":35,"nodeType":"261","messageId":"262","endLine":130,"endColumn":46},{"ruleId":"259","severity":1,"message":"260","line":150,"column":28,"nodeType":"261","messageId":"262","endLine":150,"endColumn":39},{"ruleId":"231","severity":1,"message":"268","line":164,"column":6,"nodeType":"229","endLine":164,"endColumn":8,"suggestions":"269"},{"ruleId":"231","severity":1,"message":"270","line":32,"column":6,"nodeType":"229","endLine":32,"endColumn":8,"suggestions":"271"},{"ruleId":"222","severity":1,"message":"266","line":54,"column":10,"nodeType":"224","messageId":"225","endLine":54,"endColumn":35},{"ruleId":"222","severity":1,"message":"267","line":57,"column":10,"nodeType":"224","messageId":"225","endLine":57,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":147,"column":35,"nodeType":"261","messageId":"262","endLine":147,"endColumn":46},{"ruleId":"259","severity":1,"message":"260","line":166,"column":28,"nodeType":"261","messageId":"262","endLine":166,"endColumn":39},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"274","text":"275"},["272"],["273"],"no-dupe-keys","Duplicate key 'container'.","ObjectExpression","unexpected","no-unused-vars","'handleChangePage' is assigned a value but never used.","Identifier","unusedVar","'handleChangeRowsPerPage' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'fetchTasks'. Either include it or remove the dependency array.",["278"],"'bull' is assigned a value but never used.",["272"],["273"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["279","280"],"Unnecessary escape character: \\..",["281","282"],"Unnecessary escape character: \\\".",["283","284"],["285","286"],["287","288"],["289","290"],["291","292"],["293","294"],["295","296"],["297","298"],["299","300"],["301","302"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'fetchPMs'. Either include it or remove the dependency array.",["303"],["304"],"'isValidEnteredProjectCode' is assigned a value but never used.","'isValidAssignee' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProjects' and 'fetchUsers'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'authCtx.userRole', 'fetchProjects', and 'fetchUsers'. Either include them or remove the dependency array.",["306"],"no-global-assign","no-unsafe-negation",[207,208],"",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"messageId":"313","fix":"314","desc":"315"},{"messageId":"316","fix":"317","desc":"318"},{"messageId":"313","fix":"319","desc":"315"},{"messageId":"316","fix":"320","desc":"318"},{"messageId":"313","fix":"321","desc":"315"},{"messageId":"316","fix":"322","desc":"318"},{"messageId":"313","fix":"323","desc":"315"},{"messageId":"316","fix":"324","desc":"318"},{"messageId":"313","fix":"325","desc":"315"},{"messageId":"316","fix":"326","desc":"318"},{"messageId":"313","fix":"327","desc":"315"},{"messageId":"316","fix":"328","desc":"318"},{"messageId":"313","fix":"329","desc":"315"},{"messageId":"316","fix":"330","desc":"318"},{"messageId":"313","fix":"331","desc":"315"},{"messageId":"316","fix":"332","desc":"318"},{"messageId":"313","fix":"333","desc":"315"},{"messageId":"316","fix":"334","desc":"318"},{"messageId":"313","fix":"335","desc":"315"},{"messageId":"316","fix":"336","desc":"318"},{"messageId":"313","fix":"337","desc":"315"},{"messageId":"316","fix":"338","desc":"318"},{"messageId":"313","fix":"339","desc":"315"},{"messageId":"316","fix":"340","desc":"318"},{"desc":"341","fix":"342"},{"desc":"341","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [fetchUsers]",{"range":"348","text":"349"},"Update the dependencies array to be: [fetchProjects]",{"range":"350","text":"351"},"Update the dependencies array to be: [fetchTasks]",{"range":"352","text":"353"},"removeEscape",{"range":"354","text":"275"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"355","text":"356"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"357","text":"275"},{"range":"358","text":"356"},{"range":"359","text":"275"},{"range":"360","text":"356"},{"range":"361","text":"275"},{"range":"362","text":"356"},{"range":"363","text":"275"},{"range":"364","text":"356"},{"range":"365","text":"275"},{"range":"366","text":"356"},{"range":"367","text":"275"},{"range":"368","text":"356"},{"range":"369","text":"275"},{"range":"370","text":"356"},{"range":"371","text":"275"},{"range":"372","text":"356"},{"range":"373","text":"275"},{"range":"374","text":"356"},{"range":"375","text":"275"},{"range":"376","text":"356"},{"range":"377","text":"275"},{"range":"378","text":"356"},"Update the dependencies array to be: [fetchPMs]",{"range":"379","text":"380"},{"range":"381","text":"380"},"Update the dependencies array to be: [fetchProjects, fetchUsers]",{"range":"382","text":"383"},"Update the dependencies array to be: [authCtx.userRole, fetchProjects, fetchUsers]",{"range":"384","text":"385"},[940,942],"[fetchUsers]",[894,896],"[fetchProjects]",[1145,1147],"[fetchTasks]",[234,235],[234,234],"\\",[238,239],[238,238],[246,247],[246,246],[259,260],[259,259],[263,264],[263,263],[271,272],[271,271],[280,281],[280,280],[284,285],[284,284],[300,301],[300,300],[308,309],[308,308],[325,326],[325,325],[333,334],[333,333],[3086,3088],"[fetchPMs]",[3527,3529],[4364,4366],"[fetchProjects, fetchUsers]",[1058,1060],"[authCtx.userRole, fetchProjects, fetchUsers]"]