{"version":3,"sources":["components/Card/SimpleCard.js","constants/roleConstants.js","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","http/axios.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/ButtonGroup/BasicButtonGroup.js","constants/resourceConstants.js","constants/domainConstants.js","components/Dialog/DeleteDialog.js","components/Dialog/DropDown/DropDown.js","utils.js","components/Dialog/CreateDialogs/CreateTaskDialog.js","components/Dialog/CreateDialogs/CreateUsersDialog.js","components/Dialog/InfoDialog.js","components/Dialog/CreateDialogs/CreateProjectDialog.js","components/Dialog/EditDialogs/EditUsersDialog.js","components/Dialog/EditDialogs/EditProjectDialog.js","components/Dialog/EditDialogs/EditTaskDialog.js","components/Table/GenericTable.js","components/Project/ProjectTable.js","components/User/UserTable.js","components/Task/TaskTable.js","App.js","index.js","components/Auth/AuthForm.module.css","components/Layout/MainNavigation.module.css","components/StartingPage/StartingPageContent.module.css","components/Project/Project.module.css","components/User/User.module.css","components/Task/Task.module.css"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","action","position","pos","marginBottom","SimpleCard","props","classes","Card","className","CardContent","children","PM_ROLE","DEV_ROLE","ADMIN_ROLE","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","initialToken","localStorage","getItem","useState","setToken","userRole","setUserRole","userId","setUserId","username","setUsername","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","contextValue","setItem","console","log","role","removeItem","Provider","value","MainNavigation","authCtx","useContext","isAdmin","isPM","header","to","logo","onClick","Layout","axios","Axios","create","baseURL","headers","AuthForm","history","useHistory","emailInputRef","useRef","passwordInputRef","isLoading","setIsLoading","enteredEmail","current","enteredPassword","post","email","password","then","res","data","catch","err","alert","message","finally","auth","onSubmit","event","preventDefault","control","htmlFor","type","id","required","ref","actions","toggle","AuthPage","StartingPageContent","starting","HomePage","theme","flexDirection","alignItems","spacing","USERS_URL","PROJECTS_URL","TASKS_URL","USERS_DOMAIN","PROJECTS_DOMAIN","TASKS_DOMAIN","DeleteDialog","deleteUrl","open","setOpen","handleClose","domain","elementId","deleteAction","delete","Authorization","fetchElements","Button","variant","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","formControl","selectEmpty","marginTop","DropDown","listItems","list","length","item","index","MenuItem","FormControl","InputLabel","Select","labelId","field","onChange","setField","target","setIsValid","FormHelperText","isValidField","test","isValidEmailField","getRoles","CreateTaskDialog","errorTest","description","setDescription","progress","setProgress","status","setStatus","projectCodes","setProjectCodes","users","setUsers","enteredProjectCode","setEnteredProjectCode","assignee","setAssignee","isValidDescription","setIsValidDescription","isValidProgress","setIsValidProgress","isValidStatus","setIsValidStatus","setIsValidEnteredProjectCode","setIsValidAssignee","resetFields","createTask","projectCode","useEffect","fetchURL","get","fetchedProjectCodes","Array","project","push","code","fetchProjects","fetchedUsers","user","fullWidth","TextField","label","e","style","disabled","CreateUserDialog","setEmail","firstName","setFirstName","lastName","setLastName","setPassword","enteredRole","setEnteredRole","isValidEmail","setIsValidEmail","isValidFirstName","setIsValidFirstName","isValidLastName","setIsValidLastName","isValidRole","setIsValidRole","createUser","response","InfoDialog","CreateProjectDialog","setCode","name","setName","PMs","setPMs","enteredAssignee","setEnteredAssignee","isValidCode","setIsValidCode","isValidName","setIsValidName","isValidAssignee","createProject","fetchedPMs","showDialogContent","EditUserDialog","updateUser","put","currentElement","rows","filter","element","defaultValue","EditProjectDialog","updateProject","EditTaskDialog","isNaN","updateTask","width","container","maxHeight","textSizeAdjust","backgroundColor","GenericTable","page","rowsPerPage","showUserDialogs","showProjectsDialog","showCreateTaskDialog","showDeleteDialog","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","colSpan","columns","column","TableBody","row","hover","tabIndex","ButtonGroup","format","ProjectTable","projects","setProjects","projectsURL","profile","UserTable","fetchUsers","TaskTable","tasks","setTasks","fetchTasks","tasksURL","App","path","exact","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3b615692.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardHeader } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  action:{\n    position:\"relative\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>{props.children}</CardContent>\n    </Card>\n  );\n}\n","export const PM_ROLE = \"PM\";\nexport const DEV_ROLE = \"DEV\";\nexport const ADMIN_ROLE = \"ADMIN\";\n","import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const [userRole, setUserRole] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    console.log(parseJwt(token));\n    setUserRole(parseJwt(token).role);\n    setUserId(parseJwt(token).userId);\n    setUsername(parseJwt(token).username);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const parseJwt = (token) => {\n    var base64Url = token.split(\".\")[1];\n    var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    var jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split(\"\")\n        .map(function (c) {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(\"\")\n    );\n    return JSON.parse(jsonPayload);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    userRole: userRole,\n    userId: userId,\n    username: username,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ADMIN_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  const loggoutHandler = () => {\n    authCtx.logout();\n    // redirect\n  };\n  const isAdmin = authCtx.userRole === ADMIN_ROLE;\n  const isPM = authCtx.userRole === ADMIN_ROLE || authCtx.userRole === PM_ROLE;\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Ricardo.ch</div>\n      </Link>\n      <nav>\n        <ul>\n          {isLoggedIn && (\n            <ul>\n              {isAdmin && (\n                <li>\n                  <Link to=\"/users\">Users</Link>\n                </li>\n              )}\n              {isPM && (\n                <li>\n                  <Link to=\"/projects\">Projects</Link>\n                </li>\n              )}\n              <li>\n                <Link to=\"/tasks\">Tasks</Link>\n              </li>\n              <li>\n                <button onClick={loggoutHandler}>Logout</button>\n              </li>\n            </ul>\n          )}\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\nimport SimpleCard from '../Card/SimpleCard';\nimport MainNavigation from './MainNavigation';\nimport { Paper } from '@material-ui/core';\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <SimpleCard>\n      <main>{props.children}</main>\n      </SimpleCard>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n\n","import Axios from \"axios\";\n\nexport const axios = Axios.create({\n  baseURL:\"http://localhost:8080\"  ,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { axios } from \"../../http/axios\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  // const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const switchAuthModeHandler = () => {\n  //   setIsLogin((prevState) => !prevState);\n  // };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // const enteredEmail = emailInputRef.current.value;\n    // const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    login();\n    // optional: Add validation\n    //   setIsLoading(true);\n    //   const url = \"http://localhost:8080/api/v1/auth/login\";\n    //   fetch(url, {\n    //     method: \"POST\",\n    //     body: JSON.stringify({\n    //       email: enteredEmail,\n    //       password: enteredPassword,\n    //     }),\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //   })\n    //     .then((res) => {\n    //       setIsLoading(false);\n    //       if (res.ok) {\n    //         console.log(res);\n    //         return res.json();\n    //       } else {\n    //         return res.json().then((data) => {\n    //           let errorMessage = \"Authentication failed!\";\n    //           // if (data && data.error && data.error.message) {\n    //           //   errorMessage = data.error.message;\n    //           // }\n    //           throw new Error(errorMessage);\n    //         });\n    //       }\n    //     })\n    //     .then((data) => {\n    //       console.log(data.token);\n    //       authCtx.login(data.token);\n    //       history.replace(\"/\");\n    //     })\n    //     .catch((err) => {\n    //       alert(err.message);\n    //       setIsLoading(false);\n    //     });\n  };\n\n  const login = () => {\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    \n    const promise = axios.post(\"/api/v1/auth/login\", {\n      email: enteredEmail,\n      password: enteredPassword,\n    });\n\n    promise\n      .then((res) => {\n        authCtx.login(res.data.token);\n        history.replace(\"/\");\n        //setIsLoading(false);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n        //setIsLoading(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  \n\n  return (\n    <section className={classes.auth}>\n      <h1>Login</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Login</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button type=\"button\" className={classes.toggle}></button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome to the Project Management App</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function BasicButtonGroup() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"contained primary button group\"\n      >\n        <Button>\n          <EditIcon />\n        </Button>\n        <Button>\n          <DeleteForeverIcon />\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","export const USERS_URL = \"/api/v1/users\";\nexport const PROJECTS_URL = \"/api/v1/projects\";\nexport const TASKS_URL = \"/api/v1/tasks\";\n\n\n\n","export const USERS_DOMAIN = \"users\";\nexport const PROJECTS_DOMAIN = \"projects\";\nexport const TASKS_DOMAIN = \"tasks\";","import React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport AuthContext from \"../../store/auth-context\";\nimport { axios } from \"../../http/axios\";\nimport {\n  PROJECTS_URL,\n  USERS_URL,\n  TASKS_URL,\n} from \"../../constants/resourceConstants\";\nimport {\n  PROJECTS_DOMAIN,\n  TASKS_DOMAIN,\n  USERS_DOMAIN,\n} from \"../../constants/domainConstants\";\n\nexport default function DeleteDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYesClick = () => {\n    deleteAction();\n    setOpen(false);\n  };\n\n  const authCtx = useContext(AuthContext);\n  let deleteUrl;\n\n  if (props.domain === USERS_DOMAIN) {\n    deleteUrl = USERS_URL + \"/\" + props.elementId;\n  }\n  if (props.domain === PROJECTS_DOMAIN) {\n    console.log(\"aici\");\n    deleteUrl = PROJECTS_URL + \"/\" + props.elementId;\n  }\n  if (props.domain === TASKS_DOMAIN) {\n    deleteUrl = TASKS_URL + \"/\" + props.elementId;\n  }\n\n  const deleteAction = () => {\n    const promise = axios.delete(deleteUrl, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        alert(\"deleted successful!\");\n        props.fetchElements();\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <DeleteForeverIcon />\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"DELETE\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this item?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleYesClick} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function DropDown(props) {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    props.setField(event.target.value);\n    props.setIsValid(event.target.value != null);\n    if (event.target.value === \"\") {\n      props.setField(\"\");\n      props.setIsValid(\"\");\n    }\n  };\n\n  let listItems;\n  if (props.list.length >= 1) {\n    listItems = props.list.map((item, index) => (\n      <MenuItem value={item} key={index}>\n        {item}\n      </MenuItem>\n    ));\n    //TODO: else no items are available\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">\n          {props.role}\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={props.field}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {listItems}\n        </Select>\n        <FormHelperText>\n          It is mandatory to select a {props.role}\n        </FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","import { ADMIN_ROLE, PM_ROLE, DEV_ROLE } from \"./constants/roleConstants\";\n\nexport function isValidField(value) {\n  return /^\\s*[a-zA-Z][a-zA-Z0-9\\-.\\s]*$/.test(value);\n}\n\nexport function isValidEmailField(value) {\n  return /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\n    value\n  );\n}\n\nexport function getRoles(){\n  return [PM_ROLE,ADMIN_ROLE,DEV_ROLE];\n}\n\nexport function getTaskStatuses(){\n  return [\"NEW\", \"IN_PROGRESS\", \"COMPLETED\"];\n}\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { getTaskStatuses, isValidField } from \"../../../utils\";\nimport { getRoles } from \"../../../utils\";\nimport {\n  PROJECTS_URL,\n  TASKS_URL,\n  USERS_URL,\n} from \"../../../constants/resourceConstants\";\nimport {\n  ADMIN_ROLE,\n  DEV_ROLE,\n  PM_ROLE,\n} from \"../../../constants/roleConstants\";\n\nexport default function CreateTaskDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [description, setDescription] = useState(\"\");\n  const [progress, setProgress] = useState(\"\");\n\n  // dropdown\n  const [status, setStatus] = React.useState([]);\n  const [projectCodes, setProjectCodes] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const [enteredProjectCode, setEnteredProjectCode] = React.useState(\"\");\n  const [assignee, setAssignee] = React.useState(\"\");\n\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidDescription, setIsValidDescription] = useState(\n    isValidField(description)\n  );\n  const [isValidProgress, setIsValidProgress] = useState(progress.length > 1);\n\n  const [isValidStatus, setIsValidStatus] = useState(status.length >= 1);\n  const [isValidEnteredProjectCode, setIsValidEnteredProjectCode] = useState(\n    enteredProjectCode.length >= 1\n  );\n  const [isValidAssignee, setIsValidAssignee] = useState(assignee.length >= 1);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    createTask();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setIsValidDescription(false);\n    setIsValidProgress(false);\n    setStatus(\"\");\n    setAssignee(\"\");\n    setEnteredProjectCode(\"\");\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n    setIsValidDescription(isValidField(e.target.value));\n  };\n  const onChangeProgress = (e) => {\n    setProgress(e.target.value);\n    setIsValidProgress(e.target.value.length > 1);\n  };\n\n  const createTask = () => {\n    const promise = axios.post(\n      TASKS_URL,\n      {\n        description: description,\n        progress: progress,\n        status: status,\n        projectCode: enteredProjectCode,\n        assignee: assignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Task created successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n        setOpen(false);\n      });\n  };\n\n  const fetchProjects = () => {\n    let fetchURL;\n    if (authCtx.userRole === PM_ROLE) {\n      fetchURL = USERS_URL + \"/\" + authCtx.userId + \"/projects\";\n    } else if (authCtx.userRole === ADMIN_ROLE) {\n      fetchURL = PROJECTS_URL;\n    }\n\n    const promise = axios.get(fetchURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedProjectCodes = new Array();\n        \n        res.data.map((project) => fetchedProjectCodes.push(project.code));\n        setProjectCodes(fetchedProjectCodes);\n        console.log('aici>>>>>',fetchedProjectCodes);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedUsers = new Array();\n        res.data.map((user) => fetchedUsers.push(user.username));\n        setUsers(fetchedUsers);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchProjects();\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            onChange={onChangeDescription}\n            fullWidth\n          />\n          {!isValidDescription && (\n            <p style={errorTest}> description must be valid</p>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"progress\"\n            label=\"Progress\"\n            type=\"text\"\n            onChange={onChangeProgress}\n            fullWidth\n          />\n          {!isValidProgress && (\n            <p style={errorTest}> progress name must be valid</p>\n          )}\n\n          <DropDown\n            role=\"Status\"\n            list={getTaskStatuses()}\n            field={status}\n            setField={setStatus}\n            setIsValid={setIsValidStatus}\n          />\n          <DropDown\n            role=\"Code\"\n            list={projectCodes}\n            field={enteredProjectCode}\n            setField={setEnteredProjectCode}\n            setIsValid={setIsValidEnteredProjectCode}\n          />\n          <DropDown\n            role=\"Assignee\"\n            list={users}\n            field={assignee}\n            setField={setAssignee}\n            setIsValid={setIsValidAssignee}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={\n              !isValidDescription ||\n              !isValidProgress ||\n              !isValidStatus\n            }\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { isValidField } from \"../../../utils\";\nimport { isValidEmailField } from \"../../../utils\";\nimport { getRoles } from \"../../../utils\";\nimport { USERS_URL } from \"../../../constants/resourceConstants\";\n\nexport default function CreateUserDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [enteredRole, setEnteredRole] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidEmail, setIsValidEmail] = useState(isValidEmailField(email));\n  const [isValidFirstName, setIsValidFirstName] = useState(\n    isValidField(firstName)\n  );\n  const [isValidLastName, setIsValidLastName] = useState(\n    isValidField(lastName)\n  );\n  const [isValidRole, setIsValidRole] = useState(enteredRole.length >= 1);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    createUser();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredRole(\"\");\n    setPassword(\"\");\n    setIsValidRole(false);\n    setIsValidEmail(false);\n    setIsValidFirstName(false);\n    setIsValidLastName(false);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n    setIsValidEmail(isValidEmailField(e.target.value));\n  };\n  const onChangeFirstName = (e) => {\n    setFirstName(e.target.value);\n    setIsValidFirstName(isValidField(e.target.value));\n  };\n  const onChangeLastName = (e) => {\n    setLastName(e.target.value);\n    setIsValidLastName(isValidField(e.target.value));\n  };\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const createUser = () => {\n    const promise = axios.post(\n      USERS_URL,\n      {\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        role: enteredRole,\n        password: password,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert('User created successfully');\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Create User</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email\"\n            type=\"text\"\n            onChange={onChangeEmail}\n            fullWidth\n          />\n          {!isValidEmail && <p style={errorTest}> email must be valid</p>}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"firstName\"\n            label=\"First Name\"\n            type=\"text\"\n            onChange={onChangeFirstName}\n            fullWidth\n          />\n          {!isValidFirstName && (\n            <p style={errorTest}> first name must be valid</p>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"lastName\"\n            label=\"Last Name\"\n            type=\"text\"\n            onChange={onChangeLastName}\n            fullWidth\n          />\n          {!isValidLastName && (\n            <p style={errorTest}> last name must be valid</p>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"userName\"\n            label=\"Username\"\n            type=\"text\"\n            fullWidth\n            onChange={onChangeUsername}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            onChange={onChangePassword}\n          />\n          <DropDown\n            role=\"Role\"\n            list={getRoles()}\n            field={enteredRole}\n            setField={setEnteredRole}\n            setIsValid={setIsValidRole}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={\n              !isValidEmail ||\n              !isValidFirstName ||\n              !isValidLastName ||\n              !isValidRole\n            }\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function InfoDialog(props){\n  return (\n    <div>\n    <Dialog\n      open={true}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n  );\n};\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { isValidField } from \"../../../utils\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport InfoDialog from \"../InfoDialog\";\nimport { USERS_URL } from \"../../../constants/resourceConstants\";\nimport { PM_ROLE } from \"../../../constants/roleConstants\";\n\nexport default function CreateProjectDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [code, setCode] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [PMs, setPMs] = useState([]);\n\n  const [enteredAssignee, setEnteredAssignee] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidCode, setIsValidCode] = useState(code.length > 2);\n  const [isValidName, setIsValidName] = useState(isValidField(name));\n\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    enteredAssignee.length >= 1\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    createProject();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredAssignee(\"\");\n    setCode(\"\");\n    setIsValidCode(false);\n    setIsValidName(false);\n  };\n\n  const onChangeCode = (e) => {\n    setCode(e.target.value);\n    setIsValidCode(e.target.value.length > 2);\n  };\n  const onChangeName = (e) => {\n    setName(e.target.value);\n    setIsValidName(isValidField(e.target.value));\n  };\n\n  const createProject = () => {\n    const promise = axios.post(\n      \"/api/v1/projects\",\n      {\n        code: code,\n        name: name,\n        assignee: enteredAssignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Project created successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n        setOpen(false);\n      });\n  };\n\n  const fetchPMs = () => {\n    const promise = axios.get(USERS_URL+\"?role=PM\", {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedPMs = new Array();\n        res.data.map((user) => fetchedPMs.push(user.username));\n        setPMs(fetchedPMs);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchPMs();\n  }, []);\n\n  const showDialogContent = PMs.length > 1;\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Project</DialogTitle>\n        {showDialogContent ? (\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"code\"\n              label=\"Project Code\"\n              type=\"text\"\n              onChange={onChangeCode}\n              fullWidth\n            />\n            {!isValidCode && (\n              <p style={errorTest}> project code must be valid</p>\n            )}\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Project Name\"\n              type=\"text\"\n              onChange={onChangeName}\n              fullWidth\n            />\n            {!isValidName && (\n              <p style={errorTest}> project name must be valid</p>\n            )}\n\n            <DropDown\n              role={PM_ROLE}\n              list={PMs}\n              field={enteredAssignee} //TODO: array?\n              setField={setEnteredAssignee}\n              setIsValid={setIsValidAssignee}\n            />\n          </DialogContent>\n        ) : (\n          <InfoDialog handleClose={handleClose} title=\"Project creation not possible\" message=\"No Project Managers are available\"/>\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidCode || !isValidName || !isValidAssignee}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { isValidField } from \"../../../utils\";\nimport { isValidEmailField } from \"../../../utils\";\nimport { getRoles } from \"../../../utils\";\nimport { USERS_URL } from \"../../../constants/resourceConstants\";\n\nexport default function EditUserDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const [enteredRole, setEnteredRole] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  // const [currentElement, setCurrentElement] = React.useState({});\n\n  const [isValidEmail, setIsValidEmail] = useState(isValidEmailField(email));\n  const [isValidFirstName, setIsValidFirstName] = useState(\n    isValidField(firstName)\n  );\n  const [isValidLastName, setIsValidLastName] = useState(\n    isValidField(lastName)\n  );\n  const [isValidRole, setIsValidRole] = useState(enteredRole.length >= 1);\n\n  const handleClickOpen = () => {\n    const currentElement = props.rows.filter(\n      (element) => element.id === props.elementId\n    )[0];\n\n    setEmail(currentElement.email);\n    setFirstName(currentElement.firstName);\n    setLastName(currentElement.lastName);\n    setUsername(currentElement.username);\n    setEnteredRole(currentElement.role);\n\n    setIsValidEmail(isValidEmailField(currentElement.email));\n    setIsValidFirstName(isValidField(currentElement.firstName));\n    setIsValidLastName(isValidField(currentElement.lastName));\n    setIsValidRole(true);\n\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleUpdate = () => {\n    updateUser();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredRole(\"\");\n    setIsValidRole(false);\n    setIsValidEmail(false);\n    setIsValidFirstName(false);\n    setIsValidLastName(false);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n    setIsValidEmail(isValidEmailField(e.target.value));\n  };\n  const onChangeFirstName = (e) => {\n    setFirstName(e.target.value);\n    setIsValidFirstName(isValidField(e.target.value));\n  };\n  const onChangeLastName = (e) => {\n    setLastName(e.target.value);\n    setIsValidLastName(isValidField(e.target.value));\n  };\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateUser = () => {\n    const promise = axios.put(\n      USERS_URL+\"/\"+props.elementId,\n      {\n        id:props.elementId,\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        role: enteredRole,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"User updated successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <EditIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Update User</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue={email}\n            autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email\"\n            type=\"text\"\n            onChange={onChangeEmail}\n            fullWidth\n          />\n          {!isValidEmail && <p style={errorTest}> email must be valid</p>}\n          <TextField\n            defaultValue={firstName}\n            autoFocus\n            margin=\"dense\"\n            id=\"firstName\"\n            label=\"First Name\"\n            type=\"text\"\n            onChange={onChangeFirstName}\n            fullWidth\n          />\n          {!isValidFirstName && (\n            <p style={errorTest}> first name must be valid</p>\n          )}\n          <TextField\n            defaultValue={lastName}\n            autoFocus\n            margin=\"dense\"\n            id=\"lastName\"\n            label=\"Last Name\"\n            type=\"text\"\n            onChange={onChangeLastName}\n            fullWidth\n          />\n          {!isValidLastName && (\n            <p style={errorTest}> last name must be valid</p>\n          )}\n          <TextField\n            defaultValue={username}\n            autoFocus\n            margin=\"dense\"\n            id=\"userName\"\n            label=\"Username\"\n            type=\"text\"\n            fullWidth\n            onChange={onChangeUsername}\n          />\n          <DropDown\n            role=\"Role\"\n            list={getRoles()}\n            field={enteredRole}\n            setField={setEnteredRole}\n            setIsValid={setIsValidRole}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleUpdate}\n            color=\"primary\"\n            disabled={\n              !isValidEmail ||\n              !isValidFirstName ||\n              !isValidLastName ||\n              !isValidRole\n            }\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { isValidField } from \"../../../utils\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport InfoDialog from \"../InfoDialog\";\nimport { PROJECTS_URL, USERS_URL } from \"../../../constants/resourceConstants\";\nimport { PM_ROLE } from \"../../../constants/roleConstants\";\nimport { PROJECTS_DOMAIN } from \"../../../constants/domainConstants\";\n\nexport default function EditProjectDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [code, setCode] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [PMs, setPMs] = useState([]);\n\n  const [enteredAssignee, setEnteredAssignee] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidCode, setIsValidCode] = useState(code.length > 2);\n  const [isValidName, setIsValidName] = useState(isValidField(name));\n\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    enteredAssignee.length >= 1\n  );\n\n  const handleClickOpen = () => {\n    const currentElement = props.rows.filter(\n      (element) => element.id === props.elementId\n    )[0];\n\n    setCode(currentElement.code);\n    setName(currentElement.name);\n    setEnteredAssignee(currentElement.assignee);\n    setIsValidCode(currentElement.code.length > 1);\n    setIsValidName(isValidField(currentElement.name));\n    setIsValidAssignee(true);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    updateProject();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setEnteredAssignee(\"\");\n    setCode(\"\");\n    setIsValidCode(false);\n    setIsValidName(false);\n  };\n\n  const onChangeCode = (e) => {\n    setCode(e.target.value);\n    setIsValidCode(e.target.value.length > 2);\n  };\n  const onChangeName = (e) => {\n    setName(e.target.value);\n    setIsValidName(isValidField(e.target.value));\n  };\n\n  const updateProject = () => {\n    const promise = axios.put(\n      PROJECTS_URL + \"/\" + props.elementId,\n      {\n        id: props.elementId,\n        code: code,\n        name: name,\n        assignee: enteredAssignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then((res) => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Project updated successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  const fetchPMs = () => {\n    const promise = axios.get(USERS_URL + \"?role=PM\", {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedPMs = new Array();\n        res.data.map((user) => fetchedPMs.push(user.username));\n        setPMs(fetchedPMs);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchPMs();\n  }, []);\n\n  const showDialogContent = PMs.length > 1;\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <EditIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Update Project</DialogTitle>\n        {showDialogContent ? (\n          <DialogContent>\n            <TextField\n              defaultValue={code}\n              autoFocus\n              margin=\"dense\"\n              id=\"code\"\n              label=\"Project Code\"\n              type=\"text\"\n              onChange={onChangeCode}\n              fullWidth\n            />\n            {!isValidCode && (\n              <p style={errorTest}> project code must be valid</p>\n            )}\n            <TextField\n              defaultValue={name}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Project Name\"\n              type=\"text\"\n              onChange={onChangeName}\n              fullWidth\n            />\n            {!isValidName && (\n              <p style={errorTest}> project name must be valid</p>\n            )}\n\n            {!props.domain === PROJECTS_DOMAIN && (<DropDown\n              role={PM_ROLE}\n              list={PMs}\n              field={enteredAssignee}\n              setField={setEnteredAssignee}\n              setIsValid={setIsValidAssignee}\n            />)}\n          </DialogContent>\n        ) : (\n          <InfoDialog\n            handleClose={handleClose}\n            title=\"Project creation not possible\"\n            message=\"No Project Managers are available\"\n          />\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidCode || !isValidName || !isValidAssignee}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DropDown from \"../DropDown/DropDown\";\nimport AuthContext from \"../../../store/auth-context\";\nimport { axios } from \"../../../http/axios\";\nimport { getTaskStatuses, isValidField } from \"../../../utils\";\nimport { getRoles } from \"../../../utils\";\nimport { PROJECTS_DOMAIN } from \"../../../constants/domainConstants\";\nimport {\n  PROJECTS_URL,\n  TASKS_URL,\n  USERS_URL,\n} from \"../../../constants/resourceConstants\";\nimport { DEV_ROLE } from \"../../../constants/roleConstants\";\n\nexport default function EditTaskDialog(props) {\n  const errorTest = {\n    fontSize: 12,\n    color: \"#d3212d\",\n    display: \"inline-block\",\n  };\n\n  const authCtx = useContext(AuthContext);\n\n  const [description, setDescription] = useState(\"\");\n  const [progress, setProgress] = useState(\"\");\n\n  // dropdown\n  const [status, setStatus] = React.useState(\"\");\n  const [projectCodes, setProjectCodes] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const [enteredProjectCode, setEnteredProjectCode] = React.useState(\"\");\n  const [assignee, setAssignee] = React.useState(\"\");\n\n  const [open, setOpen] = React.useState(false);\n\n  const [isValidDescription, setIsValidDescription] = useState(\n    isValidField(description)\n  );\n  const [isValidProgress, setIsValidProgress] = useState(!isNaN(progress));\n\n  const [isValidStatus, setIsValidStatus] = useState(status.length >= 1);\n  const [isValidEnteredProjectCode, setIsValidEnteredProjectCode] = useState(\n    isValidField(enteredProjectCode)\n  );\n  const [isValidAssignee, setIsValidAssignee] = useState(\n    isValidField(assignee)\n  );\n\n  const handleClickOpen = () => {\n    const currentElement = props.rows.filter(\n      (element) => element.id === props.elementId\n    )[0];\n    setDescription(currentElement.description);\n    setProgress(currentElement.progress);\n    setStatus(currentElement.status);\n    setEnteredProjectCode(currentElement.projectCode);\n    setAssignee(currentElement.assignee);\n\n    setIsValidDescription(isValidField(currentElement.description));\n    setIsValidStatus(currentElement.status.length > 1);\n    setIsValidAssignee(true);\n    setIsValidEnteredProjectCode(true);\n    setIsValidProgress(!isNaN(progress));\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    resetFields();\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    updateTask();\n    resetFields();\n    setOpen(false);\n  };\n\n  const resetFields = () => {\n    setIsValidDescription(false);\n    setIsValidProgress(false);\n    setStatus(\"\");\n    setAssignee(\"\");\n    setEnteredProjectCode(\"\");\n  };\n\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n    setIsValidDescription(isValidField(e.target.value));\n  };\n  const onChangeProgress = (e) => {\n    setProgress(e.target.value);\n    setIsValidProgress(!isNaN(e.target.value));\n    console.log(!isNaN(e.target.value));\n  };\n\n  const updateTask = () => {\n    const promise = axios.put(\n      TASKS_URL + \"/\" + props.elementId,\n      {\n        description: description,\n        progress: progress,\n        status: status,\n        projectCode: enteredProjectCode,\n        assignee: assignee,\n      },\n      {\n        headers: {\n          Authorization: authCtx.token,\n        },\n      }\n    );\n\n    promise\n      .then(() => {\n        props.fetchElements();\n        setOpen(false);\n        alert(\"Task updated successfully\");\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n        setOpen(false);\n      });\n  };\n\n  const fetchProjects = () => {\n    const promise = axios.get(PROJECTS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedProjectCodes = new Array();\n        res.data.map((project) => fetchedProjectCodes.push(project.code));\n        setProjectCodes(fetchedProjectCodes);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.response.data);\n      });\n  };\n\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        let fetchedUsers = new Array();\n        res.data.map((user) => fetchedUsers.push(user.username));\n        setUsers(fetchedUsers);\n      })\n      .catch((err) => {\n        //TODO: snackbar alert message\n        alert(err.message);\n      });\n  };\n\n  useEffect(() => {\n    if (authCtx.userRole !== DEV_ROLE) {\n      console.log(authCtx);\n      console.log(\"final\");\n      fetchProjects();\n      fetchUsers();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        <EditIcon />\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n      >\n        <DialogTitle id=\"form-dialog-title\">Update Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            defaultValue={description}\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            onChange={onChangeDescription}\n            fullWidth\n          />\n          {!isValidDescription && (\n            <p style={errorTest}> description must be valid</p>\n          )}\n          <TextField\n            defaultValue={progress}\n            autoFocus\n            margin=\"dense\"\n            id=\"progress\"\n            label=\"Progress\"\n            type=\"text\"\n            onChange={onChangeProgress}\n            fullWidth\n          />\n          {!isValidProgress && (\n            <p style={errorTest}> progress name must be valid</p>\n          )}\n\n          <DropDown\n            role=\"Status\"\n            list={getTaskStatuses()}\n            field={status}\n            setField={setStatus}\n            setIsValid={setIsValidStatus}\n          />\n          {props.domain !== PROJECTS_DOMAIN && (\n            <DropDown\n              role=\"Code\"\n              list={projectCodes}\n              field={enteredProjectCode}\n              setField={setEnteredProjectCode}\n              setIsValid={setIsValidEnteredProjectCode}\n            />\n          )}\n          {authCtx.userRole !== DEV_ROLE && (\n            <DropDown\n              role=\"Assignee\"\n              list={users}\n              field={assignee}\n              setField={setAssignee}\n              setIsValid={setIsValidAssignee}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleCreate}\n            color=\"primary\"\n            disabled={!isValidDescription || !isValidProgress || !isValidStatus}\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport BasicButtonGroup from \"../ButtonGroup/BasicButtonGroup\";\nimport { Button, TableFooter } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteDialog from \"../Dialog/DeleteDialog\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport CreateTaskDialog from \"../Dialog/CreateDialogs/CreateTaskDialog\";\nimport CreateUserDialog from \"../Dialog/CreateDialogs/CreateUsersDialog\";\nimport CreateProjectDialog from \"../Dialog/CreateDialogs/CreateProjectDialog\";\nimport EditUserDialog from \"../Dialog/EditDialogs/EditUsersDialog\";\nimport EditProjectDialog from \"../Dialog/EditDialogs/EditProjectDialog\";\nimport EditTaskDialog from \"../Dialog/EditDialogs/EditTaskDialog\";\n\nimport {\n  PROJECTS_DOMAIN,\n  TASKS_DOMAIN,\n  USERS_DOMAIN,\n} from \"../../constants/domainConstants\";\nimport { ADMIN_ROLE, DEV_ROLE } from \"../../constants/roleConstants\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n  container: {\n    position: \"relative\",\n    alignItems: \"left\",\n  },\n  button: {\n    textSizeAdjust: \"50\",\n    backgroundColor: \"#3f51b5\",\n    margin: \"left\",\n  },\n});\n\nexport default function GenericTable(props) {\n  const authCtx = useContext(AuthContext);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const showUserDialogs = props.domain === USERS_DOMAIN;\n  const showProjectsDialog =\n    props.domain === PROJECTS_DOMAIN && authCtx.userRole === ADMIN_ROLE;\n  const showCreateTaskDialog =\n    props.domain === TASKS_DOMAIN && authCtx.userRole !== DEV_ROLE;\n  const showDeleteDialog = props.domain !== TASKS_DOMAIN || authCtx.userRole === ADMIN_ROLE;  \n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" colSpan=\"10\">\n                {/* <Button className={classes.button}><AddIcon/></Button> */}\n                {showUserDialogs && (\n                  <CreateUserDialog fetchElements={props.fetchElements} />\n                )}\n                {showProjectsDialog && (\n                  <CreateProjectDialog fetchElements={props.fetchElements} />\n                )}\n                {showCreateTaskDialog && (\n                  <CreateTaskDialog fetchElements={props.fetchElements} rows={props.rows}/>\n                )}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {props.columns.map((column, index) => {\n                      const value = row[column.id];\n                      if (index === props.columns.length - 2) {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {/* <BasicButtonGroup className={classes.buttonGroup}/> */}\n                            <ButtonGroup>\n                              {showDeleteDialog && (\n                                <DeleteDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                />\n                              )}\n                              {props.domain === USERS_DOMAIN && (\n                                <EditUserDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                              {props.domain === PROJECTS_DOMAIN && (\n                                <EditProjectDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                              {props.domain === TASKS_DOMAIN && (\n                                <EditTaskDialog\n                                  domain={props.domain}\n                                  elementId={row.id}\n                                  fetchElements={props.fetchElements}\n                                  rows={props.rows}\n                                />\n                              )}\n                            </ButtonGroup>\n                          </TableCell>\n                        );\n                      } else {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      }\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={props.rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      /> */}\n    </Paper>\n  );\n}\n","import GenericTable from \"../Table/GenericTable\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport classes from \"./Project.module.css\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { USERS_URL } from \"../../constants/resourceConstants\";\nimport { ADMIN_ROLE, PM_ROLE } from \"../../constants/roleConstants\";\nimport { PROJECTS_DOMAIN } from \"../../constants/domainConstants\";\n\nconst columns = [\n  { id: \"id\", label: \"Project ID\", minWidth: 170 },\n  { id: \"code\", label: \"Code\", minWidth: 100 },\n  { id: \"name\", label: \"Name\", minWidth: 100 },\n  { id: \"assignee\", label: \"Asignee\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n  ,\n];\n\nconst ProjectTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  \n  const userId = authCtx.userId;\n  let projectsURL; \n  if(authCtx.userRole === ADMIN_ROLE){\n    projectsURL = \"/api/v1/projects\";\n  } else if(authCtx.userRole === PM_ROLE){\n    projectsURL = USERS_URL + \"/\" + userId + \"/projects\";\n  }\n\n  const fetchProjects = () => {\n    const promise = axios.get(projectsURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setProjects(res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Projects</h1>\n      <GenericTable columns={columns} rows={projects} domain={PROJECTS_DOMAIN} fetchElements={fetchProjects}/>\n    </section>\n  );\n};\n\nexport default ProjectTable;\n","import GenericTable from \"../Table/GenericTable\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport classes from \"./User.module.css\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { USERS_URL } from \"../../constants/resourceConstants\";\nimport { USERS_DOMAIN } from \"../../constants/domainConstants\";\n\nconst columns = [\n  { id: \"id\", label: \"User ID\", minWidth: 170 },\n  { id: \"email\", label: \"Email\", minWidth: 100 },\n  { id: \"firstName\", label: \"First Name\", minWidth: 100 },\n  { id: \"lastName\", label: \"Last Name\", minWidth: 100 },\n  { id: \"username\", label: \"Username\", minWidth: 100 },\n  { id: \"role\", label: \"role\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100, align: \"center\"},\n  ,\n];\n\nconst UserTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    const promise = axios.get(USERS_URL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Users</h1>\n      <GenericTable columns={columns} rows={users} domain={USERS_DOMAIN} fetchElements={fetchUsers}/>\n    </section>\n  );\n};\n\nexport default UserTable;\n","import GenericTable from \"../Table/GenericTable\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport classes from \"./Task.module.css\";\nimport { axios } from \"../../http/axios\";\nimport AuthContext from \"../../store/auth-context\";\nimport { ADMIN_ROLE, PM_ROLE, DEV_ROLE } from \"../../constants/roleConstants\";\nimport { TASKS_URL, USERS_URL } from \"../../constants/resourceConstants\";\nimport { TASKS_DOMAIN } from \"../../constants/domainConstants\";\n\nconst columns = [\n  { id: \"id\", label: \"User ID\", minWidth: 170 },\n  { id: \"description\", label: \"Description\", minWidth: 100 },\n  { id: \"pm\", label: \"Project Manager\", minWidth: 100 },\n  { id: \"progress\", label: \"Progress\", minWidth: 100 },\n  { id: \"status\", label: \"Status\", minWidth: 100 },\n  { id: \"deadline\", label: \"Deadline\", minWidth: 100 },\n  { id: \"projectCode\", label: \"Project Code\", minWidth: 100 },\n  { id: \"assignee\", label: \"Assignee\", minWidth: 100 },\n  { id: \"actions\", label: \"Actions\", minWidth: 100 },\n  ,\n];\n\nconst TaskTable = () => {\n  const authCtx = useContext(AuthContext);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const userId = authCtx.userId;\n  let tasksURL; \n  if(authCtx.userRole === ADMIN_ROLE){\n    tasksURL = TASKS_URL;\n    console.log('**3333*');\n  } else if(authCtx.userRole === PM_ROLE){\n    tasksURL = USERS_URL +\"/\"+ userId + \"/projects/tasks\";\n    console.log('**444*');\n  } else if(authCtx.userRole === DEV_ROLE){\n    tasksURL = USERS_URL +\"/\"+ userId + \"/tasks\";\n    console.log('**555*');\n  }\n  const fetchTasks = () => {\n    const promise = axios.get(tasksURL, {\n      headers: {\n        Authorization: authCtx.token,\n      },\n    });\n\n    promise\n      .then((res) => {\n        setTasks(res.data);\n        console.log('***',res.data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n  return (\n    <section className={classes.profile}>\n      <h1>Tasks</h1>\n      <GenericTable columns={columns} rows={tasks} domain={TASKS_DOMAIN} fetchElements={fetchTasks}/>\n    </section>\n  );\n};\n\nexport default TaskTable;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\nimport ProjectTable from \"./components/Project/ProjectTable\";\nimport UserTable from \"./components/User/UserTable\";\nimport TaskTable from \"./components/Task/TaskTable\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        {!authCtx.isLoggedIn && (\n          <Switch>\n            <Route path=\"/auth\">\n              <AuthPage />\n            </Route>\n            <Route path=\"/\" exact>\n              <HomePage />\n            </Route>\n          </Switch>\n        )}\n        {authCtx.isLoggedIn && (\n          <Switch>\n            <Route path=\"/projects\">\n              <ProjectTable />\n            </Route>\n            <Route path=\"/users\">\n              <UserTable />\n            </Route>\n            <Route path=\"/tasks\">\n              <TaskTable />\n            </Route>\n          </Switch>\n        )}\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Project_profile__jazIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"User_profile__1lzIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Task_profile__3p3u2\"};"],"sourceRoot":""}